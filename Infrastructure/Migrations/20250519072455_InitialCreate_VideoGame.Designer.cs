// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(VideoGameDbContext))]
    [Migration("20250519072455_InitialCreate_VideoGame")]
    partial class InitialCreate_VideoGame
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("ApplicationCore.Models.GameDeveloper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameDeveloper");
                });

            modelBuilder.Entity("ApplicationCore.Models.GameGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("ApplicationCore.Models.GamePublisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GamePublisher");
                });

            modelBuilder.Entity("ApplicationCore.Models.VideoGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoverImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CriticScore")
                        .HasColumnType("float");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlatformId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PublisherId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TitleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("GenreId");

                    b.HasIndex("PlatformId");

                    b.HasIndex("PublisherId");

                    b.HasIndex("TitleId");

                    b.ToTable("VideoGames", (string)null);
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GamePlatform");
                });

            modelBuilder.Entity("GameTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameTitle");
                });

            modelBuilder.Entity("ApplicationCore.Models.VideoGame", b =>
                {
                    b.HasOne("ApplicationCore.Models.GameDeveloper", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Models.GameGenre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamePlatform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Models.GamePublisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameTitle", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GameSales", "Sales", b1 =>
                        {
                            b1.Property<int>("VideoGameId")
                                .HasColumnType("INTEGER");

                            b1.Property<decimal>("EuropeSales")
                                .HasColumnType("TEXT")
                                .HasColumnName("EuropeSales");

                            b1.Property<decimal>("JapanSales")
                                .HasColumnType("TEXT")
                                .HasColumnName("JapanSales");

                            b1.Property<decimal>("NorthAmericaSales")
                                .HasColumnType("TEXT")
                                .HasColumnName("NorthAmericaSales");

                            b1.Property<decimal>("OtherSales")
                                .HasColumnType("TEXT")
                                .HasColumnName("OtherSales");

                            b1.Property<decimal>("TotalSales")
                                .HasColumnType("TEXT")
                                .HasColumnName("TotalSales");

                            b1.HasKey("VideoGameId");

                            b1.ToTable("VideoGames");

                            b1.WithOwner()
                                .HasForeignKey("VideoGameId");
                        });

                    b.Navigation("Developer");

                    b.Navigation("Genre");

                    b.Navigation("Platform");

                    b.Navigation("Publisher");

                    b.Navigation("Sales")
                        .IsRequired();

                    b.Navigation("Title");
                });
#pragma warning restore 612, 618
        }
    }
}
